# by default, only log to stdout
log4j.rootLogger=ERROR, stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{HH:mm:ss}] %5p: [%c{1}] %m%n

## example log file appender
## ${context.name} as variable in log file names is NOT supported any more (it breaks more often than not)

#log.dir=${catalina.base}/logs
#log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#log4j.appender.logfile.File=${log.dir}/example.log
#log4j.appender.logfile.MaxFileSize=1000KB
## Keep one backup file
#log4j.appender.logfile.MaxBackupIndex=1
#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.logfile.layout.ConversionPattern=%d %-5p [%c] %m%n

# The log level for all classes that are not configured below.
log4j.logger.org.deegree = INFO
log4j.logger.org.deegree.cs.transformations.TransformationAccuracy = INFO
# automatically generated output follows

# ======================================================================================================================
# =============================================== Severe error messages ================================================
# ======================================================================================================================

# ======================================================================================================================
# =================================================== crs subsystem ====================================================
# ======================================================================================================================


## Get information about metadata of Coordinate System components.
#log4j.logger.org.deegree.cs.CRSIdentifiable = DEBUG

## Get information about the transformation of a list of ordinates.
#log4j.logger.org.deegree.cs.CoordinateTransformer = DEBUG

## Get information about created transformation chain.
#log4j.logger.org.deegree.cs.Transformer = DEBUG
log4j.logger.org.deegree.cs.transformations.TransformationFactory = INFO

# ============================================= crs configuration logging ==============================================


## Output logging information on loading of Coordinate Systems from a configuration.
#log4j.logger.org.deegree.cs.configuration = DEBUG

## Get information about initializing the xml file.
#log4j.logger.org.deegree.cs.configuration.resources.XMLFileResource = DEBUG

## Get information about the currently exported coordinate system.
#log4j.logger.org.deegree.cs.io.deegree.CRSExporter = DEBUG

## Get information about the currently exported coordinate system.
#log4j.logger.org.deegree.cs.io.deegree.CRSExporterBase = DEBUG

## Get information about the initialization of the provider, as well as on requested objects.
#log4j.logger.org.deegree.cs.persistence.AbstractCRSStore = DEBUG

## the deegree XML format provider
#log4j.logger.org.deegree.cs.persistence.deegree.d3.DeegreeCRSStore = DEBUG

## Get information about the currently parsed crs, as well as a stack trace if something went wrong.
#log4j.logger.org.deegree.cs.persistence.deegree.d3.parsers.CoordinateSystemParser = DEBUG

## Get information about the currently parsed datums, as well as a stack trace if something went wrong.
#log4j.logger.org.deegree.cs.persistence.deegree.d3.parsers.DatumParser = DEBUG

## Get stacktraces if something goes wrong.
#log4j.logger.org.deegree.cs.persistence.deegree.d3.parsers.DefinitionParser = DEBUG

## Get information about the currently parsed ellipsoid, as well as a stack trace if something went wrong.
#log4j.logger.org.deegree.cs.persistence.deegree.d3.parsers.EllipsoidParser = DEBUG

## Get information about the currently parsed primemeridian, as well as a stack trace if something went wrong.
#log4j.logger.org.deegree.cs.persistence.deegree.d3.parsers.PrimemeridianParser = DEBUG

## Get information about the currently parsed projections, as well as a stack trace if something went wrong.
#log4j.logger.org.deegree.cs.persistence.deegree.d3.parsers.ProjectionParser = DEBUG

## Get information about the currently parsed transformation, as well as a stack trace if something went wrong.
#log4j.logger.org.deegree.cs.persistence.deegree.d3.parsers.TransformationParser = DEBUG

## Get information about the currently parsed coordinate system components.
#log4j.logger.org.deegree.cs.persistence.gml.GMLCRSStore = DEBUG

## Get information about the currently parsed transformations.
#log4j.logger.org.deegree.cs.persistence.gml.GMLFileResource = DEBUG

## the proj4 format provider
#log4j.logger.org.deegree.cs.persistence.proj4.PROJ4CRSStore = DEBUG

## Get information about errors while parsing the proj4 file.
#log4j.logger.org.deegree.cs.persistence.proj4.ProjFileResource = DEBUG

# ================================================ projections logging =================================================


## Get logging information about projections and the execution of projections.
#log4j.logger.org.deegree.cs.projections = DEBUG

## Get information about incoming ordinates.
#log4j.logger.org.deegree.cs.projections.cylindric.Mercator = DEBUG

## Get information about incoming ordinates of the (inverse) projection.
#log4j.logger.org.deegree.cs.projections.cylindric.TransverseMercator = DEBUG

# =============================================== Transformation logging ===============================================


## Get information about transformations and the creation of transformation chains.
#log4j.logger.org.deegree.cs.transformations = DEBUG

## Get information about the transformation steps which were 'automatically' created.
#log4j.logger.org.deegree.cs.transformations.TransformationFactory = DEBUG

## Get information about the concatenation of two or more transformations.
#log4j.logger.org.deegree.cs.transformations.coordinate.ConcatenatedTransform = DEBUG

## Get information about the incoming ordinates of a direct transformation.
#log4j.logger.org.deegree.cs.transformations.coordinate.DirectTransform = DEBUG

## Get information about the incoming ordinates of a geocentric transformation.
#log4j.logger.org.deegree.cs.transformations.coordinate.GeocentricTransform = DEBUG

## Get information about axis of the projection as well as the used projection and the incoming ordinates.
#log4j.logger.org.deegree.cs.transformations.coordinate.ProjectionTransform = DEBUG

## Get stack traces if an error occurred while loading / transforming (on) a gridshift file.
#log4j.logger.org.deegree.cs.transformations.ntv2.NTv2Transformation = DEBUG

## Get information transformation substitution process.
#log4j.logger.org.deegree.cs.utilities.MappingUtils = DEBUG

## Get information about the swapping of axis and the creation of standardized values.
#log4j.logger.org.deegree.cs.utilities.Matrix = DEBUG